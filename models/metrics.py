"""
    File name: metrics.py
    Author: Patrick Cummings
    Date created: 10/24/2019
    Date last modified: 10/24/2019
    Python Version: 3.7

    Contains functions for training and evaluating perceptron model.
    calc_predictions() to calculate predictions on test or validation sets.
    calc_accuracy() to calculate accuracy of predictions generated by classifier.
"""

import numpy as np


def calc_predictions(x, weights):
    """Calculates predicted values for perceptron classifier using given weights.

    Args:
        x (ndarray): (n x m) ndarray of n observations on m features.
        weights (ndarray): (1 x m) ndarray of m weights from learned model.

    Returns:
        predictions (list of float): List of predicted values in {-1, 1}.
    """
    weights = np.array(weights, dtype=np.float64)
    predictions = []
    for i in range(np.size(x, axis=0)):
        wtx = weights.T.dot(x[i])
        if wtx >= 0:
            pred = 1
        else:
            pred = -1
        predictions.append(pred)
    return predictions


def calc_accuracy(predictions, labels):
    """Calculate accuracy of perceptron classifier.

    Args:
        predictions (list or ndarray): list or ndarray of class predictions in {-1, 1}
        labels (list or ndarray): list or ndarray of true labels.

    Returns:
        accuracy (float): Calculated accuracy.
    """
    # Ensure lists are coerced to ndarrays of dtype=int.
    predictions = np.array(predictions, dtype=int)
    labels = np.array(labels, dtype=int)
    correct = (labels == predictions)
    accuracy = correct.sum() / np.size(correct)
    return accuracy
